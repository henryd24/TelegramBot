trigger:
  branches:
    include:
      - main
  paths:
    exclude:
    - k8s/*
pr: none

pool: $(Agente)

variables:
  - group: 'Telegrambot'
  - name: imageName
    value: 'henda24/telegrambot'
  - name: imageTag
    value: '$(Build.BuildId)'
  - name: imageFullName
    value: '$(imageName):$(imageTag)'

steps:
- checkout: self
  fetchDepth: 0
  persistCredentials: true 
  clean: true

- task: Bash@3
  displayName: Building and Pushing Image
  inputs:
    targetType: 'inline'
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      script: 'docker buildx build --platform linux/amd64,linux/arm64 -t henda24/telegrambot:latest -t $(imageFullName) --push .'
    ${{ else }}:
      script: 'docker buildx build --platform linux/amd64,linux/arm64 -t $(imageFullName) .'

- task: Bash@3
  displayName: 'Update Kubernetes Manifest'
  inputs:
    targetType: 'inline'
    script: |
      echo "Updating deployment with image: $(imageFullName)"
      export IMAGE="$(imageFullName)"

      # Install yq if missing
      if ! command -v yq >/dev/null 2>&1; then
        echo "Installing yq..."
        sudo wget -q -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
      fi
      yq eval -i '.spec.template.spec.containers[].image = strenv(IMAGE)' k8s/deployment.yaml

- task: Bash@3
  displayName: 'Commit and Push Manifest Changes'
  inputs:
    targetType: 'inline'
    script: |
      git config --global user.email "pipeline@azuredevops.com"
      git config --global user.name "Azure DevOps Pipeline"
      git config --local commit.gpgsign false
      git config --local tag.gpgsign false
      git checkout main
      
      git add $(Build.SourcesDirectory)/k8s/deployment.yaml
      
      if ! git diff --staged --quiet; then
        git commit --no-gpg-sign -m "[CI] Update image to $(imageFullName)"
        git push origin main
      else
        echo "No changes to commit."
      fi
