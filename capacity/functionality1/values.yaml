namespace: test

replicaCount: 2

image:
  repository: us-docker.pkg.dev/google-samples/containers/gke/hello-app
  pullPolicy: IfNotPresent
  tag: "1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "codevsecops_test_ms"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "80"

podLabels:
  app.kubernetes.io/component: web
  app.kubernetes.io/instance: google-instance

podSecurityContext:
  fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: 80
#   initialDelaySeconds: 10
#   periodSeconds: 15
#   timeoutSeconds: 2
#   failureThreshold: 3

# readinessProbe:
#   httpGet:
#     path: /
#     port: 80
#   initialDelaySeconds: 5
#   periodSeconds: 10
#   timeoutSeconds: 2
#   failureThreshold: 3

volumes: []
volumeMounts: []

nodeSelector:
  kubernetes.io/os: linux

tolerations: []

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
                - google-instance
        topologyKey: "kubernetes.io/hostname"

configmapValues:
  appName: "codevsecops-test-ms"
  appVersion: "1.0"
  appDescription: "Code DevSecOps Test Microservice"
  appPort: "8080"
  appImage: "us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0"